package org.eclipse.regexp.ui.view.input;

import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.layout.GridDataFactory;
import org.eclipse.jface.layout.GridLayoutFactory;
import org.eclipse.regexp.ui.common.SectionToolbar;
import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.ScrolledComposite;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.ui.forms.widgets.FormToolkit;
import org.eclipse.ui.forms.widgets.Section;

public class InputSection {

	private FormToolkit toolkit;
	private Section section;

	private final List<InputControl> inputs = new ArrayList<InputControl>();

	public void create(final Composite parent, final FormToolkit toolkit) {
		this.section = toolkit.createSection(parent, Section.TITLE_BAR);
		this.toolkit = toolkit;
		section.setText("Input");
		GridDataFactory.swtDefaults().align(SWT.FILL, SWT.CENTER).span(2, 1)
				.applyTo(section);

		final Composite inputPanel = toolkit.createComposite(section, SWT.NONE);
		section.setClient(inputPanel);
		GridLayoutFactory.fillDefaults().numColumns(3).applyTo(inputPanel);

		final SectionToolbar inputToolbar = new SectionToolbar(section);
		inputToolbar.add(new AddInputAction(this));
		inputToolbar.done();

		addInput();
	}

	public void addInput() {
		InputControl inputControl = new InputControl(this);
		inputControl.create((Composite) section.getClient(), toolkit);
		inputs.add(inputControl);
		refresh();
	}

	public void refresh() {
		for (int i = 0; i < inputs.size(); i++) {
			inputs.get(i).refresh(i + 1);
		}

		Composite parent = (Composite) section.getClient();
		while (parent != null) {
			if (parent.getParent() instanceof ScrolledComposite) {
				((ScrolledComposite) parent.getParent()).setMinSize(parent
						.computeSize(SWT.DEFAULT, SWT.DEFAULT));
				parent.getParent().layout(true, true);
				break;
			}
			parent = parent.getParent();
		}
	}

}
